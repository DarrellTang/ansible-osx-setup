---
- hosts: localhost
  tasks:
    - name: Install homebrew
      include_role:
        name: geerlingguy.mac.homebrew

    - name: Setup dnsmasq
      include_role:
        name: dnsmasq

    - name: Clone dotfiles repo
      ansible.builtin.git:
          repo: git@github.com:DarrellTang/dotfiles.git
          dest: "/Users/{{ lookup('env', 'USER') }}/dotfiles"
          version: mac

    - name: Clone powerline fonts 
      ansible.builtin.git:
          repo: https://github.com/powerline/fonts
          dest: "/Users/{{ lookup('env', 'USER') }}/fonts"
          depth: 1

    - name: Chdir and install fonts
      shell: "{{ lookup('env', 'HOME') }}/fonts/install.sh"

    - name: Chdir and install vimplug for neovim
      shell: |
        sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'

    - name: Create a symlinks to dotfiles
      ansible.builtin.file:
        src: "/Users/{{ lookup('env', 'USER') }}/dotfiles/{{ item }}"
        dest: "/Users/{{ lookup('env', 'USER') }}/{{ item }}"
        owner: "{{ lookup('env', 'USER') }}"
        group: staff
        state: link
      with_items:
        - .tmux.conf
        - .zshrc
        - .vimrc
        - .alacritty.yml

    - name: Create neovim config directory if it does not exist
      ansible.builtin.file:
        path: "/Users/{{ lookup('env', 'USER') }}/.config/nvim/"
        state: directory
        mode: '0755'

    - name: Symlink neovim init.vim to dotfiles/.vimrc
      ansible.builtin.file:
        src: "/Users/{{ lookup('env', 'USER') }}/dotfiles/.vimrc"
        dest: "/Users/{{ lookup('env', 'USER') }}/.config/nvim/init.vim"
        owner: "{{ lookup('env', 'USER') }}"
        group: staff
        state: link

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - alacritty
        - lens
        - virtualbox
        - visual-studio-code
        - slack
        - workflowy

    - name: Install homebrew packages
      community.general.homebrew:
        name: [
          'awscli',
          'coreutils',
          'curl',
          'dnsmasq',
          'exa',
          'fzf',
          'krew',
          'kubectx',
          'kubernetes-cli',
          'kubernetes-helm',
          'nvim',
          'openssl' ,
          'screenfetch',
          's3cmd',
          'terraform',
          'tfenv',
          'tldr',
          'tmux',
          'unzip',
          'zsh',
        ]
        state: present
        update_homebrew: yes

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: Ensure homebrew zsh is in allowed shells
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    - name: Install Oh My ZSH
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
      args:
        creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true

    - name: Install Default Python
      shell: |
        pip3 install ansible
